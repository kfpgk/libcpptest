@startuml class-diagram

title libcpptest integration_test class diagram

package integration_test {

    class Skeleton {
        == public ==
        + run() : bool
        + setExitOnFail(bool) : void
        + setSkipCleanUp(bool) : void
        + setKeepSandBox(bool) : void
        + setKeepOldSandBox(bool) : void
        == protected ==
        # logger : Logger&
        ..
        # Skeleton(string)
        # Skeleton(string, logger)
        == private ==
        - internalLogger : Logger
        - {abstract} doRun() : bool
        - wrapSetup() : void
        - {abstract} setup() : void
        - wrapCleanUp() : void
        - {abstract} cleanUp() : void
        - {abstract} doRun() : void
        - setupSandbox(string) : void
        - cleanUpSandbox(string) : void
    }

    class SingleTest {
        == public ==
        + run() : bool
        + setExitOnFail(bool) : void
        + setSkipCleanUp(bool) : void
        + setKeepSandBox(bool) : void
        + setKeepOldSandBox(bool) : void
        == protected ==
        # logger : Logger&
        ..
        # SingleTest(string)
        # SingleTest(string, Logger)
        == private ==
        - doRun() : bool
        - {abstract} perform() : void
        - {abstract} evaluate() : void
    }

    class MultiTest {
        == public ==
        + run() : bool
        + setExitOnFail(bool) : void
        + setSkipCleanUp(bool) : void
        + setKeepSandBox(bool) : void
        + setKeepOldSandBox(bool) : void
        == protected ==
        # logger : Logger&
        ..
        # MultiTest(string)
        # MultiTest(string, Logger)
        ..
        # addTestCase(TestCase) : void
        == private ==
        - testCases : TestCase[]
        - doRun() : bool
        - wrapPerform(TestCase) : void
        - wrapEvaluate(TestCase) : void
    }

    struct TestCase {
        + name : string
        + perform : void(void)*
        + evaluate : void(void)*
    }

}

package <<external>> {
    package cpplog::logger {
        class Logger
        hide Logger attributes
        hide Logger methods
    }
}

MultiTest o-- "*" TestCase

MultiTest --> Skeleton
SingleTest --> Skeleton

Skeleton o-- "1" Logger

@enduml